{
  "name": "cpu",
  "type": "module",
  "publisher": "thomasqm",
  "displayName": "Competitive Programmers Union",
  "description": "A smoother competitive programming experience: test cases, debugging, stress testing and more",
  "version": "0.3.6",
  "icon": "resources/icon.png",
  "author": "Thomas Marlowe",
  "repository": {
    "type": "git",
    "url": "https://github.com/canislupaster/cpu-vscode"
  },
  "engines": {
    "vscode": "^1.91.0"
  },
  "categories": [
    "Other"
  ],
  "extensionKind": [
    "workspace"
  ],
  "activationEvents": [],
  "main": "./main.js",
  "contributes": {
    "commands": [
      {
        "command": "cpu.run",
        "title": "Run test",
        "category": "CPU"
      },
      {
        "command": "cpu.debug",
        "title": "Debug test",
        "category": "CPU"
      },
      {
        "command": "cpu.runAll",
        "title": "Run all tests",
        "category": "CPU"
      },
      {
        "command": "cpu.lastRun",
        "title": "Rerun last run test(s)",
        "category": "CPU"
      }
    ],
    "configuration": {
      "title": "Competitive Programmers Union",
      "properties": {
        "cpu.testDir": {
          "type": "string",
          "default": "",
          "description": "Test directory"
        },
        "cpu.buildDir": {
          "type": "string",
          "default": "",
          "description": "Build directory"
        },
        "cpu.createFiles": {
          "type": "boolean",
          "default": false,
          "description": "Whether to create files when importing tests"
        },
        "cpu.createFileName": {
          "type": "string",
          "default": "{{#contest}}{{.}}/{{/contest}}{{problem}}.cpp",
          "description": "Name of created file"
        },
        "cpu.createFileTemplate": {
          "type": "string",
          "default": "",
          "description": "Path to template"
        },
        "cpu.nProcs": {
          "type": "number",
          "default": 10,
          "description": "Max number of processes that can run in parallel"
        },
        "cpu.runtime": {
          "type": "object",
          "additionalProperties": false,
          "description": "Per-language runtime paths",
          "properties": {
            "java": {
              "type": "string"
            },
            "python": {
              "type": "string"
            }
          },
          "default": {
            "java": "",
            "python": ""
          }
        },
        "cpu.compiler": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "c++": {
              "type": "string"
            },
            "java": {
              "type": "string"
            },
            "rust": {
              "type": "string"
            }
          },
          "description": "Per-language compiler paths",
          "default": {
            "c++": "",
            "java": "",
            "rust": ""
          }
        },
        "cpu.compileArgs.fast": {
          "description": "Compile args for running",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "c++": {
              "type": "string"
            },
            "java": {
              "type": "string"
            },
            "rust": {
              "type": "string"
            }
          },
          "default": {
            "java": "",
            "c++": "-O2",
            "rust": "-C opt-level=2"
          }
        },
        "cpu.clangdOverride": {
          "description": "Override clangd compile flags",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "c++": {
              "type": "string"
            }
          },
          "default": {
            "c++": ""
          }
        },
        "cpu.compileArgs.debug": {
          "description": "Compile args for debugging",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "c++": {
              "type": "string"
            },
            "java": {
              "type": "string"
            },
            "rust": {
              "type": "string"
            }
          },
          "default": {
            "java": "",
            "c++": "-O0 -D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC",
            "rust": "-g -C debug-assertions=on"
          }
        },
        "cpu.compileArgs.common": {
          "description": "Compile args for all configurations",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "c++": {
              "type": "string"
            },
            "java": {
              "type": "string"
            },
            "rust": {
              "type": "string"
            }
          },
          "default": {
            "java": "-g",
            "rust": "",
            "c++": "-Wall -std=c++20 -g"
          }
        },
        "cpu.debugger": {
          "description": "Debugger for C++/Rust",
          "type": "string",
          "enum": [
            "lldb",
            "gdb",
            "codelldb",
            "auto"
          ],
          "enumDescriptions": [
            "Use cppdbg with lldb",
            "Use cppdbg with gdb",
            "Use CodeLLDB",
            "GDB on Windows, CodeLLDB otherwise"
          ],
          "default": "auto"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "cpu",
          "title": "Competitive Programmers Union",
          "icon": "resources/small-icon.png"
        }
      ],
      "panel": [
        {
          "id": "cpurun",
          "title": "Test I/O",
          "icon": "resources/small-icon.png"
        }
      ]
    },
    "views": {
      "cpu": [
        {
          "type": "webview",
          "id": "cpu.activitybar",
          "name": "Tests"
        }
      ],
      "cpurun": [
        {
          "type": "webview",
          "id": "cpu.panel",
          "name": "Test I/O"
        }
      ]
    }
  },
  "scripts": {
    "compile": "npm run check-types && node esbuild.mjs",
    "check-types": "tsc",
    "watch": "node esbuild.mjs --watch",
    "vscode:prepublish": "npm run package",
    "package": "npm run check-types && node esbuild.mjs --production"
  },
  "devDependencies": {
    "@tailwindcss/cli": "^4.1.7",
    "@types/mustache": "^4.2.6",
    "@types/node": "22.x",
    "@types/pidusage": "^2.0.5",
    "@types/react-collapse": "^5.0.4",
    "@types/react-dom": "^19",
    "@types/shell-quote": "^1.7.5",
    "@types/vscode": "^1.91.0",
    "esbuild": "^0.25",
    "generate-license-file": "^4.0.0",
    "tailwindcss": "^4.1.7",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8",
    "@eslint/js": "^9.35",
    "eslint": "^9.35",
    "eslint-plugin-react": "^7.37.5"
  },
  "dependencies": {
    "@codemirror/commands": "^6.8.1",
    "@codemirror/merge": "^6.10.1",
    "@codemirror/search": "^6.5.11",
    "@codemirror/state": "^6.5.2",
    "@codemirror/view": "^6.36.8",
    "@formkit/drag-and-drop": "^0.5",
    "@heroui/react": "2.8.4",
    "@hono/node-server": "^1.14.3",
    "@vscode/codicons": "^0.0.40",
    "globals": "^16.2.0",
    "hono": "^4.7.10",
    "mustache": "^4.2.0",
    "pidusage": "^4.0.1",
    "react": "^19",
    "react-collapse": "^5.1.1",
    "react-dom": "^19",
    "react-select": "^5.10.1",
    "shell-quote": "^1.8.2",
    "tailwind-merge": "^3.3.0",
    "vscode-languageclient": "^9"
  }
}
